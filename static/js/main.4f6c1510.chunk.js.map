{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","service/api.js","App/App.js","index.js"],"names":["Searchbar","onSubmit","onChange","className","type","autoComplete","autoFocus","placeholder","ImageGalleryItem","webformatURL","alt","largeImageURL","showModalImg","key","onClick","modalImage","src","ImageGallery","images","map","item","tags","id","Button","Loader","color","height","width","timeout","Modal","modalEscape","e","keyCode","useEffect","window","addEventListener","removeEventListener","event","currentTarget","target","axios","defaults","baseURL","setParams","params","App","useState","setImages","setError","isLoading","setIsLoading","searchForm","setSearchForm","inputQuery","setInputQuery","page","setPage","isModalOpen","setIsModalOpen","setModalImage","renderImages","query","q","image_type","orientation","per_page","safesearch","get","then","data","hits","catch","err","getApi","length","Notiflix","Notify","failure","toUpperCase","trim","warning","finally","scrollTo","top","document","documentElement","scrollHeight","behavior","openModal","preventDefault","value","prevState","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4f6c1510.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Searchbar = ({ onSubmit, onChange }) => {\r\n    return (\r\n        <header className=\"Searchbar\">\r\n  <form className=\"SearchForm\" onSubmit={onSubmit}>\r\n    <button type=\"submit\" className=\"SearchForm-button\">\r\n      <span className=\"SearchForm-button-label\">Search</span>\r\n    </button>\r\n\r\n          <input\r\n            onChange={onChange}\r\n      className=\"SearchForm-input\"\r\n      type=\"text\"\r\n      autoComplete=\"off\"\r\n      autoFocus\r\n      placeholder=\"Search images and photos\"\r\n    />\r\n  </form>\r\n</header>\r\n    )\r\n}\r\n\r\nexport default Searchbar;\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n}","import PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ webformatURL, alt, largeImageURL, showModalImg, ...key }) => {\r\n    return (\r\n        <li key={key} className=\"ImageGalleryItem\" onClick={() => showModalImg({modalImage: {\r\n            largeImageURL,\r\n            alt\r\n          }})}>\r\n            <img src={webformatURL} alt={alt} className=\"ImageGalleryItem-image\" />\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n    webformatURL: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    showModalImg: PropTypes.func.isRequired\r\n}","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({images, showModalImg}) => {\r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n        {images.map(item => \r\n            <ImageGalleryItem showModalImg={showModalImg} webformatURL={item.webformatURL} alt={item.tags} key={item.id} largeImageURL={item.largeImageURL}></ImageGalleryItem>\r\n            )\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ImageGallery;\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n        webformatURL: PropTypes.string.isRequired,\r\n        tags: PropTypes.string.isRequired,\r\n        largeImageURL: PropTypes.string.isRequired,\r\n        id: PropTypes.number\r\n    })).isRequired,\r\n    showModalImg: PropTypes.func.isRequired\r\n}","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick }) => {\r\n    return (\r\n        <div className=\"button-wrapper\">\r\n            <button onClick={onClick} type=\"button\" className=\"Button\">Load more</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired\r\n}","import LoaderSpinner from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loaderOverlay\">\r\n    <div className=\"loaderSpiner\">\r\n        <LoaderSpinner\r\n        type=\"ThreeDots\"\r\n        color=\"#1229aa\"\r\n        height={120}\r\n        width={150}\r\n      timeout={4000} //4 secs\r\n      />\r\n      </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Loader;","import { useEffect } from \"react\";\r\n\r\nconst Modal = ({ modalImage, onClick }) => {\r\n   \r\n  const modalEscape = e => {\r\n    if (e.keyCode === 27) {\r\n      onClick();\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    window.addEventListener('keydown', modalEscape);\r\n    return () => {\r\n      window.removeEventListener('keydown', modalEscape);\r\n    }\r\n  })\r\n\r\n  const clickBackdrop = event => {\r\n    if (event.currentTarget === event.target) {\r\n      onClick();\r\n    }\r\n  };\r\n\r\n        return (\r\n        <div className=\"Overlay\" onClick={clickBackdrop}>\r\n            <div className=\"Modal\">\r\n                    <img src={modalImage.largeImageURL} alt={modalImage.tags} />\r\n            </div>\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://pixabay.com/api/\";\r\nconst API_KEY = \"23801243-e85441bee56b02cd6046c9902\";\r\n\r\nconst setParams = (params) =>\r\n  (axios.defaults.params = { key: API_KEY, ...params });\r\n\r\nexport const getApi = (query, page = 1, safesearch = true) => {\r\n  setParams({\r\n    q: query,\r\n    image_type: \"photo\",\r\n    orientation: \"horizontal\",\r\n    per_page: 12,\r\n    page,\r\n    safesearch,\r\n  });\r\n  return axios\r\n    .get(axios.defaults.baseURL)\r\n    .then(({ data }) => data.hits)\r\n    .catch((err) => {\r\n      throw err;\r\n    });\r\n};\r\n\r\n// axios.defaults.baseURL = \"https://newsapi.org/v2/\";\r\n// const API_KEY = \"22e1feeab1ef4a16a87ba035c00cc49f\";\r\n\r\n// const setParams = (params) =>\r\n//   (axios.defaults.params = { apiKey: API_KEY, ...params });\r\n\r\n// export const getApi = (query = \"everything\", page = 1) => {\r\n//   setParams({\r\n//     q: query,\r\n//     per_page: 12,\r\n//     from: \"2021-10-05\",\r\n//     sortBy: \"publishedAt\",\r\n//     page,\r\n//   });\r\n//   return axios\r\n//     .get(`everything`)\r\n//     .then(({ data }) => data.articles)\r\n//     .catch((err) => {\r\n//       throw err;\r\n//     });\r\n// };\r\n","import \"./App.css\";\nimport Searchbar from \"../components/Searchbar/Searchbar\";\nimport ImageGallery from \"../components/ImageGallery/ImageGallery\";\nimport Button from \"../components/Button/Button\";\nimport Loader from \"../components/Loader/Loader\";\nimport Modal from \"../components/Modal/Modal\";\nimport { getApi } from \"../service/api\";\nimport Notiflix from \"notiflix\";\nimport { useState, useEffect } from \"react\";\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchForm, setSearchForm] = useState(\"\");\n  const [inputQuery, setInputQuery] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalImage, setModalImage] = useState({});\n\n  useEffect(() => {\n    if (searchForm || page !== page) {\n      renderImages();\n    }\n  }, [searchForm, page]);\n\n  const renderImages = () => {\n    setIsLoading(true);\n    getApi(inputQuery, page)\n      .then((hits) => {\n        if (hits.length === 0) {\n          return Notiflix.Notify.failure(\n            `There is no results with ${searchForm.toUpperCase()} request`\n          );\n        }\n        if (inputQuery.trim().length === 0) {\n          return Notiflix.Notify.warning(\n            `Please enter something in searchform`\n          );\n        }\n        setImages([...images, ...hits]);\n      })\n      .catch((err) => setError(err))\n      .finally(() => {\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: \"smooth\",\n        });\n        setIsLoading(false);\n      });\n  };\n\n  const handleChange = (e) => {\n    setInputQuery(e.target.value);\n  };\n\n  const submitSearchForm = (e) => {\n    e.preventDefault();\n    setSearchForm(inputQuery);\n    if (inputQuery !== searchForm) {\n      setPage(1);\n      setImages([]);\n    }\n  };\n\n  const handleButtonLoad = () => {\n    setPage((prevState) => prevState + 1);\n  };\n\n  const openModal = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n\n  const showModalImg = ({ modalImage }) => {\n    setModalImage(modalImage);\n    openModal();\n  };\n\n  return (\n    <div className=\"container\">\n      <Searchbar\n        onSubmit={submitSearchForm}\n        onChange={handleChange}\n      ></Searchbar>\n      {isLoading && <Loader></Loader>}\n      {images.length !== 0 && (\n        <ImageGallery\n          images={images}\n          isModalOpen={isModalOpen}\n          showModalImg={showModalImg}\n        ></ImageGallery>\n      )}\n      {images.length !== 0 && <Button onClick={handleButtonLoad}></Button>}\n      {isModalOpen && (\n        <Modal modalImage={modalImage} onClick={openModal}></Modal>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./styles.css\";\nimport App from \"../src/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}